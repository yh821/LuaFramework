---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by yuanhuan.
--- DateTime: 2020/10/26 10:12
---

---@class sequenceNode : CompositeNode
sequenceNode = BaseClass(CompositeNode)

function sequenceNode:Tick(delta_time)
    if self.children then
        local abort_type = self:GetAbortType()
        for i, v in ipairs(self.children) do
            if abort_type == eAbortType.Both or abort_type == eAbortType.Lower then
                if v:IsCondition() and v:GetState() == nil then
                    self:SetNeedReevaluate()
                    self.parent:SetNeedReevaluate()
                end
            end
            if abort_type == eAbortType.Both or abort_type == eAbortType.Self then
                if v:IsCondition() and v:GetState() ~= nil
                        and self:GetState() == eNodeState.Running
                then
                    if v:SetState(v:Tick(delta_time)) then
                        v:print("状态改变" .. v:GetState())
                        if v:GetState() == eNodeState.Failure then
                            self:AbortSelfNode(i + 1) --打断i后的子节点
                            return v:GetState()
                        end
                    end
                end
            end
            if v:GetState() == nil or v:GetState() == eNodeState.Running then
                v:SetState(v:Tick(delta_time))
                if v:GetState() ~= eNodeState.Success then
                    return v:GetState()
                end
            elseif v:IsNeedReevaluate() and v:IsComposite() then
                local state = v:ReevaluateNode(delta_time)
                if state == eNodeState.Success then
                    self:print("AbortLower")
                end
            end
        end
    end
    return eNodeState.Success
end

function sequenceNode:ReevaluateNode(delta_time)
    if not self.children then
        return
    end
    for i, v in ipairs(self.children) do
        if v:GetState() == eNodeState.Success or v:GetState() == eNodeState.Failure then
            if v:IsCondition() then
                if v:SetState(v:Tick(delta_time))
                        and v:GetState() == eNodeState.Failure
                then
                    return eNodeState.Failure
                end
            elseif v:IsComposite() and v:IsNeedReevaluate() then
                local abort_type = v:GetAbortType()
                if abort_type == eAbortType.Both or abort_type == eAbortType.Lower then
                    return v:ReevaluateNode(delta_time)
                end
            end
        end
    end
end
